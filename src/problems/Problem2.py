
# Problem 2
# Each new term in the Fibonacci sequence is generated by adding the previous two terms.
# By starting with 1 and 2, the first 10 terms will be:
#
# 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
#
# By considering the terms in the Fibonacci sequence whose values do not exceed four million,
# find the sum of the even-valued terms.
class Problem2:
    def solve(self):
        # The first 2 digits are both 1. Its safe to start with them because they are both not even
        previous = 1
        current = 1
        sum = 0
        max_number = 4000000
        while current < max_number:
            new_number = previous + current
            if new_number % 2 == 0:
                sum += new_number
            previous = current
            current = new_number
        return(sum)
